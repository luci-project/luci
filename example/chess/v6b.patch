diff -Naur rev5/tui.c rev6/tui.c
--- rev5/tui.c
+++ rev6/tui.c
@@ -25,6 +25,9 @@
 #include <poll.h>
 #include <termios.h>
 
+#include <SDL/SDL.h>
+#include <SDL/SDL_image.h>
+
 #include "tui.h"
 #include "board.h"
 #include "openings.h"
@@ -117,6 +120,43 @@
 
 
+SDL_Surface * gui_content = NULL;
+SDL_Surface * gui_pieceSurface = NULL;
 void tui_draw() {
+	// SDL
+	const int offset = 10;
+	const int size = 100;
+	if (gui_content == NULL) {
+		// Initialize SDL.
+		SDL_Init(SDL_INIT_VIDEO);
+		gui_content = SDL_SetVideoMode(size * 8 + 2 * offset, size * 8 + 2 * offset, 32, SDL_SWSURFACE);
+		SDL_WM_SetCaption("Luci Chess", NULL);
+		IMG_Init(IMG_INIT_PNG);
+		gui_pieceSurface = IMG_Load("images/pieces.png");
+		SDL_FillRect(gui_content, NULL, 0x6E3700);
+	}
+	const int piece_width = 40;
+	const int piece_height = 90;
+	const int color[2][2] = { { 0xFFCE9E, 0xFFB56B }, { 0xD18b47 , 0xB8732E } };
+	for (int y = 0; y < 8; y++)
+		for (int x = 0; x < 8; x++) {
+			SDL_Rect field = { offset + x * size + 1, offset + y * size + 1, size - 2, size - 2 };
+			SDL_FillRect(gui_content, &field, color[(x + y) % 2][(selected.from.x == x && selected.from.y == y) || (selected.to.x == x && selected.to.y == y)]);
+			if (board[y][x] != 0) {
+				SDL_Rect src = { (board[y][x] + 6) * piece_width, 0, piece_width, piece_height};
+				SDL_Rect dest = { offset + x * size + (size - piece_width) / 2 , offset + y * size + (size - piece_height) / 2, piece_width, piece_height};
+				SDL_BlitSurface(gui_pieceSurface, &src, gui_content, &dest);
+			}
+		}
+	SDL_Flip(gui_content);
+	SDL_Event e;
+	while (SDL_PollEvent(&e)) {
+		if (e.type == SDL_QUIT)
+			SDL_Quit();
+		else if (e.type == SDL_KEYUP && e.key.keysym.sym == SDLK_ESCAPE)
+			SDL_Quit();
+	}
+
+	// Terminal
 	fprintf(stdout, "\033[2J\033[H\033[0m\033[K%s\033[0m\n\033[K\n", tui_title);
 	for (int y = 0; y < 10; y++) {
 		fprintf(stdout, "\033[2K%.*s", tui_origin.x - 3, "                  ");
diff -Naur rev5/Makefile rev6/Makefile
--- rev5/Makefile
+++ rev6/Makefile
@@ -1,5 +1,6 @@
 CFLAGS = --std=c11 -MD -MP -Wall
 CFLAGS += $(addprefix -D,_GNU_SOURCE $(CDEFS))
+LDFLAGS = -lSDL -lSDL_image
 SOURCE = $(wildcard *.c)
 OBJECT = $(SOURCE:.c=.o)
 DEPEND = $(SOURCE:.c=.d)
@@ -13,7 +14,7 @@
 	$(CC) $(CFLAGS) -o $@ -c $<
 
 $(TARGET): $(OBJECT)
-	$(LD) -o $@ $^
+	$(LD) -o $@ $^ $(LDFLAGS)
 
 clean:
 	rm -f $(OBJECT) $(DEPEND)

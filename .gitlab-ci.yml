stages:
  - build
  - test-gcc
  - test-llvm

build-luci:
  image: inf4/stubs:gcc-x64
  stage: build
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - make all
  artifacts:
    paths:
      - "ld-luci-*.so"
      - "versions.txt"
  retry: 1

fetch-artifacts:
  image: busybox
  stage: build
  script:
    - rm -rf bean
    - mkdir -p bean/elfo
    - 'wget --no-check-certificate -O elfo-artifacts.zip --header="JOB-TOKEN: $CI_JOB_TOKEN" "${CI_API_V4_URL}/projects/${CI_PROJECT_NAMESPACE}%2Felfo/jobs/artifacts/master/download?job=build-test"'
    - unzip -jo elfo-artifacts.zip -d bean/elfo
    - 'wget --no-check-certificate -O bean-artifacts.zip --header="JOB-TOKEN: $CI_JOB_TOKEN" "${CI_API_V4_URL}/projects/${CI_PROJECT_NAMESPACE}%2Fbean/jobs/artifacts/master/download?job=build"'
    - unzip -jo bean-artifacts.zip -d bean
  artifacts:
    paths:
      - "bean/elfo/elfo-*"
      - "bean/bean-*"
  retry: 1


test-almalinux-9-gcc:
  image: almalinux:9
  stage: test-gcc
  dependencies:
    - build-luci
    - fetch-artifacts
  before_script:
    - yum install -y make diffutils gcc gcc-c++
  script:
    - ./test/run.sh -c GCC -R
    - ./test/run.sh -c GCC
    - ./test/run.sh -c GCC -u

test-debian-stretch-gcc:
  image: debian:stretch
  stage: test-gcc
  dependencies:
    - build-luci
    - fetch-artifacts
  before_script:
    - apt-get update && apt-get install -y gcc g++ make libcap2-bin
  script:
    - ./test/run.sh -c GCC -R
    - ./test/run.sh -c GCC
    - ./test/run.sh -c GCC -u

test-debian-buster-gcc:
  image: debian:buster
  stage: test-gcc
  dependencies:
    - build-luci
    - fetch-artifacts
  before_script:
    - apt-get update && apt-get install -y gcc g++ make libcap2-bin
  script:
    - ./test/run.sh -c GCC -R
    - ./test/run.sh -c GCC
    - ./test/run.sh -c GCC -u

test-debian-bullseye-gcc:
  image: debian:bullseye
  stage: test-gcc
  dependencies:
    - build-luci
    - fetch-artifacts
  before_script:
    - apt-get update && apt-get install -y gcc g++ make libcap2-bin
  script:
    - ./test/run.sh -c GCC -R
    - ./test/run.sh -c GCC
    - ./test/run.sh -c GCC -u

test-debian-bookworm-gcc:
  image: debian:bookworm
  stage: test-gcc
  dependencies:
    - build-luci
    - fetch-artifacts
  before_script:
    - apt-get update && apt-get install -y gcc g++ make libcap2-bin
  script:
    - ./test/run.sh -c GCC -R
    - ./test/run.sh -c GCC
    - ./test/run.sh -c GCC -u

test-fedora-36-gcc:
  image: fedora:36
  stage: test-gcc
  dependencies:
    - build-luci
    - fetch-artifacts
  before_script:
    - yum install -y make diffutils gcc gcc-c++
  script:
    - ./test/run.sh -c GCC -R
    - ./test/run.sh -c GCC
    - ./test/run.sh -c GCC -u

test-fedora-37-gcc:
  image: fedora:37
  stage: test-gcc
  dependencies:
    - build-luci
    - fetch-artifacts
  before_script:
    - yum install -y make diffutils gcc gcc-c++
  script:
    - ./test/run.sh -c GCC -R
    - ./test/run.sh -c GCC
    - ./test/run.sh -c GCC -u

test-opensuseleap-15-gcc:
  image: opensuse/leap:15
  stage: test-gcc
  dependencies:
    - build-luci
    - fetch-artifacts
  before_script:
    - zypper install -y make libcap-progs gcc gcc-c++
  script:
    - ./test/run.sh -c GCC -R
    - ./test/run.sh -c GCC
    - ./test/run.sh -c GCC -u

test-oraclelinux-9-gcc:
  image: oraclelinux:9
  stage: test-gcc
  dependencies:
    - build-luci
    - fetch-artifacts
  before_script:
    - yum install -y make diffutils gcc gcc-c++
  script:
    - ./test/run.sh -c GCC -R
    - ./test/run.sh -c GCC
    - ./test/run.sh -c GCC -u

test-rhel-9-gcc:
  image: redhat/ubi9
  stage: test-gcc
  dependencies:
    - build-luci
    - fetch-artifacts
  before_script:
    - yum install -y make diffutils gcc gcc-c++
  script:
    - ./test/run.sh -c GCC -R
    - ./test/run.sh -c GCC
    - ./test/run.sh -c GCC -u

test-ubuntu-focal-gcc:
  image: ubuntu:focal
  stage: test-gcc
  dependencies:
    - build-luci
    - fetch-artifacts
  before_script:
    - apt-get update && apt-get install -y gcc g++ make libcap2-bin
  script:
    - ./test/run.sh -c GCC -R
    - ./test/run.sh -c GCC
    - ./test/run.sh -c GCC -u

test-ubuntu-jammy-gcc:
  image: ubuntu:jammy
  stage: test-gcc
  dependencies:
    - build-luci
    - fetch-artifacts
  before_script:
    - apt-get update && apt-get install -y gcc g++ make libcap2-bin
  script:
    - ./test/run.sh -c GCC -R
    - ./test/run.sh -c GCC
    - ./test/run.sh -c GCC -u


test-almalinux-9-llvm:
  image: almalinux:9
  stage: test-llvm
  dependencies:
    - build-luci
    - fetch-artifacts
  before_script:
    - yum install -y make diffutils clang
  script:
    - ./test/run.sh -c LLVM -R
    - ./test/run.sh -c LLVM
    - ./test/run.sh -c LLVM -u

test-debian-stretch-llvm:
  image: debian:stretch
  stage: test-llvm
  dependencies:
    - build-luci
    - fetch-artifacts
  before_script:
    - apt-get update && apt-get install -y clang-11 make libcap2-bin
    - update-alternatives --install /usr/bin/clang clang /usr/bin/clang-11 110 --slave /usr/bin/clang++ clang++ /usr/bin/clang++-11
    - update-alternatives --install /usr/bin/cc cc /usr/bin/clang 110 --slave /usr/bin/c++ c++ /usr/bin/clang++
  script:
    - ./test/run.sh -c LLVM -R
    - ./test/run.sh -c LLVM
    - ./test/run.sh -c LLVM -u

test-debian-buster-llvm:
  image: debian:buster
  stage: test-llvm
  dependencies:
    - build-luci
    - fetch-artifacts
  before_script:
    - apt-get update && apt-get install -y clang make libcap2-bin
  script:
    - ./test/run.sh -c LLVM -R
    - ./test/run.sh -c LLVM
    - ./test/run.sh -c LLVM -u

test-debian-bullseye-llvm:
  image: debian:bullseye
  stage: test-llvm
  dependencies:
    - build-luci
    - fetch-artifacts
  before_script:
    - apt-get update && apt-get install -y clang make libcap2-bin
  script:
    - ./test/run.sh -c LLVM -R
    - ./test/run.sh -c LLVM
    - ./test/run.sh -c LLVM -u

test-debian-bookworm-llvm:
  image: debian:bookworm
  stage: test-llvm
  dependencies:
    - build-luci
    - fetch-artifacts
  before_script:
    - apt-get update && apt-get install -y clang make libcap2-bin
  script:
    - ./test/run.sh -c LLVM -R
    - ./test/run.sh -c LLVM
    - ./test/run.sh -c LLVM -u

test-fedora-36-llvm:
  image: fedora:36
  stage: test-llvm
  dependencies:
    - build-luci
    - fetch-artifacts
  before_script:
    - yum install -y make diffutils clang
  script:
    - ./test/run.sh -c LLVM -R
    - ./test/run.sh -c LLVM
    - ./test/run.sh -c LLVM -u

test-fedora-37-llvm:
  image: fedora:37
  stage: test-llvm
  dependencies:
    - build-luci
    - fetch-artifacts
  before_script:
    - yum install -y make diffutils clang
  script:
    - ./test/run.sh -c LLVM -R
    - ./test/run.sh -c LLVM
    - ./test/run.sh -c LLVM -u

test-opensuseleap-15-llvm:
  image: opensuse/leap:15
  stage: test-llvm
  dependencies:
    - build-luci
    - fetch-artifacts
  before_script:
    - zypper install -y make libcap-progs gcc gcc-c++ clang
  script:
    - ./test/run.sh -c LLVM -R
    - ./test/run.sh -c LLVM
    - ./test/run.sh -c LLVM -u

test-oraclelinux-9-llvm:
  image: oraclelinux:9
  stage: test-llvm
  dependencies:
    - build-luci
    - fetch-artifacts
  before_script:
    - yum install -y make diffutils clang
  script:
    - ./test/run.sh -c LLVM -R
    - ./test/run.sh -c LLVM
    - ./test/run.sh -c LLVM -u

test-rhel-9-llvm:
  image: redhat/ubi9
  stage: test-llvm
  dependencies:
    - build-luci
    - fetch-artifacts
  before_script:
    - yum install -y make diffutils clang
  script:
    - ./test/run.sh -c LLVM -R
    - ./test/run.sh -c LLVM
    - ./test/run.sh -c LLVM -u

test-ubuntu-focal-llvm:
  image: ubuntu:focal
  stage: test-llvm
  dependencies:
    - build-luci
    - fetch-artifacts
  before_script:
    - apt-get update && apt-get install -y clang make libcap2-bin
  script:
    - ./test/run.sh -c LLVM -R
    - ./test/run.sh -c LLVM
    - ./test/run.sh -c LLVM -u

test-ubuntu-jammy-llvm:
  image: ubuntu:jammy
  stage: test-llvm
  dependencies:
    - build-luci
    - fetch-artifacts
  before_script:
    - apt-get update && apt-get install -y clang make libcap2-bin
  script:
    - ./test/run.sh -c LLVM -R
    - ./test/run.sh -c LLVM
    - ./test/run.sh -c LLVM -u

